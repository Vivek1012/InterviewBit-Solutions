public class Solution {
    // DO NOT MODIFY THE LIST
    public int search(final List<Integer> a, int b) {
        
        int n = a.size()-1;
        int l = 0, r = n;
        int mid = (l+r)/2;
        int pivot = 0;
        
    while(l<=r)
    {
        mid = (l+r)/2;
        if(l == r)
            pivot = l;
        
        if(a.get(mid) > a.get(mid + 1))
        {
            pivot =  mid;
            break;
        }
        if(a.get(mid) < a.get(mid - 1))
        {
            pivot =  mid-1;
            break;
        }
        if(l <= mid && a.get(l) <= a.get(mid))
        {
            l = mid+1;
        }
        if(mid < r && a.get(mid) < a.get(r))
        {
            r = mid-1;
        }
    }
    
    if(pivot == 0)
    {
        l = pivot;
        r = n;
    }
    else if(b < a.get(pivot) && b <= a.get(n))
    {
        l = pivot+1;
        r= n;
    }
    else if(b >= a.get(0) && b < a.get(pivot))
    {
        l = 0;
        r = pivot-1;
    }
    else if(b == a.get(pivot))
        return pivot;
    
    while(l<=r)
    {
        mid = (l+r)/2;
    
        if(a.get(mid) == b)
        {
            return mid;
        }
        else if(a.get(mid) > b)
        {
            r = mid-1;   
        }
        else if(a.get(mid) < b)
        {
            l= mid+1;
        }
    }
    return -1;
    }
}
