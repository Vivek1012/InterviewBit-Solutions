public class Solution {
    public int firstMissingPositive(ArrayList<Integer> A) {
        
        int n = A.size();
        int arr[] = new int[n];
        
        for(int i = 0 ; i < n ; i++)
        {
            arr[i] = A.get(i);
        }
        
        int pos = seperate(arr, n);
        //  System.out.println( " pos " + pos);
        int missing  = 0;
        missing = findPositiveMissing(arr , pos);
        
        return missing;
    }
    
    private int findPositiveMissing(int[] arr, int n) {
        
        for(int i = 0 ; i <= n ; i++)
        { 
            if(Math.abs(arr[i])-1 <= n && arr[Math.abs(arr[i]) - 1] >= 0)
                arr[Math.abs(arr[i]) - 1] = -arr[Math.abs(arr[i]) - 1]; 
        }
        
        int i = 0;
        for(i = 0 ; i <= n ; i++)
        {
            //  System.out.println(arr[i]);
            if(arr[i] > 0)
                return i+1;
        }
        return i+1;
    }

public static int seperate(int a[], int n) {
        int temp = 0;
        int j = n - 1;
        int i = 0;
        if(n == 1 && a[0] > 0)
            return 0;
        
        while (i <= j) {
            
            while (i <= n-1 && a[i] > 0)
                i++;
            while (j >= 0 && a[j] <= 0 )
                j--;
            if(i < j) {
                temp = a[i];
                a[i] = a[j];
                a[j] = temp;
                
                i++;
                j--;
            }
        }
        // System.out.println(i + "\t" + j);
        return j;
    }
}
