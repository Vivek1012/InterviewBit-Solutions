/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public ArrayList<Interval> merge(ArrayList<Interval> intervals) {


        ArrayList<Interval> ar = new ArrayList<Interval>();
                int n = intervals.size();
                if(n == 0 || n == 1)
                {
                    return intervals;
                }
        
        Collections.sort(intervals , new Comparator<Interval>(){
                public int compare(Interval i1 , Interval i2)
                {
                    return Integer.compare(i1.start , i2.start);
                }
        });
        
        
        
        ar.add(intervals.get(0));
        
        int i = 1;
        
        while(i < n)
        {
            Interval val = ar.get(ar.size()-1);
            
            if(val.end >= intervals.get(i).start){
                val = ar.remove(ar.size()-1);
                ar.add(new Interval (val.start , Math.max(val.end , intervals.get(i).end)));
            }
            else
                ar.add(new Interval(intervals.get(i).start , intervals.get(i).end));
                
            i++;
            
        }
        
        return ar;
        
    }
}
